apply plugin: 'com.android.application'
apply plugin: 'jp.leafytree.android-scala'

android {
	compileSdkVersion 33

	defaultConfig {
		applicationId "com.kos.svgpreview"
		minSdkVersion 21
		targetSdkVersion 33
		versionCode 5
		versionName "0.8"
		vectorDrawables.useSupportLibrary = true

	}
	buildTypes {
		release {
			minifyEnabled true
			useProguard false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
}

repositories {
	flatDir {
		dirs 'G:\\android\\libs\\jars\\mods'
	}
}

dependencies {
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	testImplementation 'junit:junit:4.12'
	implementation 'androidx.appcompat:appcompat:1.1.0'
	implementation 'androidx.cardview:cardview:1.0.0'
	implementation 'androidx.recyclerview:recyclerview:1.1.0'
	implementation 'org.scala-lang:scala-library:2.11.12'

	implementation('com.nativelibs4java:scalaxy-loops_2.11:0.3.4') {
		exclude group: "org.scala-lang", module: 'scala-compiler'
	}
	implementation('com.nativelibs4java:scalaxy-streams_2.11:0.3.4') {
		exclude group: "org.scala-lang", module: 'scala-compiler'
	}
	implementation name: 'scalaxy-beans'
	implementation 'androidx.legacy:legacy-support-v13:1.0.0'
	implementation 'com.google.android.material:material:1.0.0'
	implementation 'org.scala-lang.modules:scala-xml_2.11:1.0.6'
	implementation 'com.lihaoyi:scalatags_2.11:0.6.0'
	implementation 'com.github.japgolly.scalacss:extscalatags_2.11:0.5.0'
	implementation 'com.squareup:otto:1.3.8'
}


tasks.withType(ScalaCompile) {
// If you want to use scala compile daemon
	scalaCompileOptions.metaClass.useCompileDaemon = true
// Suppress deprecation warnings
	scalaCompileOptions.metaClass.deprecation = true
// Additional parameters

	scalaCompileOptions.metaClass.additionalParameters = ["-feature","-Xexperimental","-optimise"]
	ScalaCompileOptions.metaClass.useAnt = false
	scalaCompileOptions.metaClass.Xexperimental=true
//	ScalaCompileOptions.metaClass.daemonServer = true
//	ScalaCompileOptions.metaClass.fork = true

//	ScalaCompileOptions.metaClass.useCompileDaemon = false
}

